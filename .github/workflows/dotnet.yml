# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build & Test check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - name: Restore workloads
      working-directory: ./src
      run: dotnet workload restore
    # - name: Restore dependencies
    #   working-directory: ./src
    #   run: dotnet restore

    # Raygun.Blazor
    - name: Build Raygun.Blazor
      working-directory: ./src
      run: dotnet build Raygun.Blazor/Raygun.Blazor.csproj
    - name: Test Raygun.Blazor
      working-directory: ./src
      run: dotnet test Raygun.Tests.Blazor/Raygun.Tests.Blazor.csproj
      
    # Raygun.Blazor.Server
    - name: Build Raygun.Blazor.Server
      working-directory: ./src
      run: dotnet build Raygun.Blazor.Server/Raygun.Blazor.Server.csproj
    - name: Test Raygun.Blazor.Server
      working-directory: ./src
      run: dotnet test Raygun.Tests.Blazor.Server/Raygun.Tests.Blazor.Server.csproj

    # Raygun.Blazor.WebAssembly
    - name: Build Raygun.Blazor.WebAssembly
      working-directory: ./src
      run: dotnet build Raygun.Blazor.WebAssembly/Raygun.Blazor.WebAssembly.csproj

    # Sample projects
    - name: Build Raygun.Samples.Blazor.Server
      working-directory: ./src
      run: dotnet build Raygun.Samples.Blazor.Server/Raygun.Samples.Blazor.Server.csproj
    - name: Build Raygun.Samples.Blazor.WebAssembly
      working-directory: ./src
      run: dotnet build Raygun.Samples.Blazor.Server/Raygun.Samples.Blazor.Server.csproj
